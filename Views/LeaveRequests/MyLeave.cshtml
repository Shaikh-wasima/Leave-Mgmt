@model EmployeeLeaveRequestVm
@using Microsoft.AspNetCore.Identity
@using Leave_Management.Data
@inject SignInManager<Employee> SignInManager
@inject UserManager<Employee> UserManager

@{
    ViewData["Title"] = "MyLeave";

}


    

<h1>My Leave Allocations</h1>

<div class="jumbotron mx-auto">
    <div class="card">
        <div class="table-responsive">
            <table class="table rounded">
                <thead>
                    <tr>
                        <th scope="col">Leave Type</th>
                        <th scope="col">Number of Days</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.LeaveAllocations)
                    {
                        <tr>
                            <td>@item.LeaveType.Name</td>
                            <td><span class="badge badge-secondary">@item.NumberOfDays</span></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<h1>My Leave Records</h1>
<table class="table" id="tbldata">
    <thead>
        <tr>
            <th>
                Leave Type
            </th>
            <th>
                Total Days
            </th>
            <th>
                Start Date
            </th>
            <th>
                End Date
            </th>
            <th>
                Date Requested
            </th>
            <th>
                Approval Status
            </th>
            <th>
                Cancel Request
            </th>
          @*   <th>
                Rejection Reason
            </th> *@
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.LeaveRequests)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LeaveType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalDays)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateRequested)
                </td>
                <td>
                    @if (item.Cancelled)
                    {
                        <span class="badge badge-secondary">Cancelled</span>
                    }
                    else if (item.Approved == false)
                    {

                        <span class="badge badge-danger">Rejected</span>

                    }
                    else if (item.Approved == null)
                    {
                        <span class="badge badge-warning">Pending</span>

                    }
                    else
                    {
                        <span class="badge badge-success">Approved</span>
                    }
                </td>
                <td>
                    @if (!item.Cancelled && item.StartDate.Date >= DateTime.Now.Date && item.Approved == null)
                    {
                        <a asp-action="CancelRequest" class="btn btn-danger" asp-route-id="@item.Id" onclick="return confirm('Are you sure you want to Cancel?')">
                            <i class="fas fa-trash-alt"></i>
                        </a>
                    }
                </td>
                @* <td>
                    @if (item.Approved == false)
                    {
                        @Html.DisplayFor(modelItem => item.RejectionMessage)

                    }
                </td> *@
            </tr>
        }
    </tbody>
</table>
<br />
<br />
<br />
<br />


@section Scripts{
    <script>
        $(document).ready(function () {
            var table = $('#tbldata').DataTable();

            function getQueryParameter(name) {
                const urlParams = new URLSearchParams(window.location.search);
                return urlParams.get(name);
            }

            // Check if there's a 'filter' query parameter and set the value accordingly
            const searchValue = getQueryParameter("filter");

            if (searchValue) {
                // Set the search input value
                var searchInput = $('#tbldata_filter input');
                searchInput.val(searchValue);

                searchInput.trigger($.Event('keyup', { keyCode: 13 }));
            }
        });
    </script>
} 