@model EventCalendarVM;
@using Leave_Management.Data;
@using Leave_Management.Contracts;
@using Microsoft.AspNetCore.Identity;
@inject IUnitOfWork _uow;


@{
    ViewData["Title"] = "Event Calendar";
}

<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js"></script>


<h1 class="text-center display-6">Events Calendar</h1>
<div id="calendar"></div>

<!-- Modal -->
<div id="myModal" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Event</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="eventForm" method="post" asp-action="AddEvent">
                    <div class="form-group">
                        <label asp-for="@Model.Title">Event Title:</label>
                        <input type="text" class="form-control" id="eventTitle" name="eventTitle">
                    </div>
                    <div class="form-group">
                        <label asp-for="@Model.StartDate">Start Date:</label>
                        <input type="text" class="form-control" id="startDate" name="startDate" >
                    </div>
                    <div class="form-group">
                        <label asp-for="@Model.EndDate">End Date:</label>
                        <input type="text" class="form-control" id="endDate" name="endDate" >
                    </div>
                    <button type="submit" id="submitBtn" class="btn btn-primary" >Submit</button>
                </form>
            </div>
        </div>
    </div>
</div>



<script>
    document.addEventListener('DOMContentLoaded', async function () {
        var today = new Date().toISOString().slice(0, 10);

        // Fetch existing events from the server
        var response = await fetch('/EventCalendar/GetEvents');
        var events = await response.json();

        // Create an array to store the events for the calendar
        var calendarEvents = [];

        // Populate calendarEvents array with fetched events
        events.forEach(event => {
            calendarEvents.push({
                title: event.title,
                start: event.startDate,
                end: event.endDate
            });
        });

        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            selectable: true,
            validRange: {
                start: today
            },
            events: calendarEvents, // Assign fetched events to the calendar
            select: function (info) {
                var startDate = info.startStr;
                var endDate = info.endStr;
                openModal(startDate, endDate);
            },
        });

        calendar.render();


        // Get the modal
        var modal = document.getElementById("myModal");

        // Get the <span> element that closes the modal
        var span = document.getElementsByClassName("close")[0];

        // When the user clicks on <span> (x), close the modal
        span.onclick = function () {
            modal.style.display = "none";
        };

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function (event) {
            if (event.target == modal) {
                modal.style.display = "none";
            }
        };

        async function openModal(startDate, endDate) {
            var startDateInput = document.getElementById("startDate");
            var endDateInput = document.getElementById("endDate");
            
            startDateInput.value = startDate;
            endDateInput.value = endDate;
            modal.style.display = "block";
        }

        var submitBtn = document.getElementById("submitBtn");
        submitBtn.onclick = async function () {
            event.preventDefault();

            // Get form data
            var title = document.getElementById("eventTitle").value.trim();
            var startDate = document.getElementById("startDate").value;
            var endDate = document.getElementById("endDate").value;

            // Convert dates to Date objects
            var startDateObj = new Date(startDate);
            var endDateObj = new Date(endDate);
            var todayObj = new Date(today);

            // Validation checks
            if (title === '') {
                alert("Please enter event title!");
                return false;
            }

            if (startDateObj < todayObj || endDateObj < todayObj) {
                alert("Start date and End date cannot be in the past.");
                return false;
            }

            if (endDateObj < startDateObj) {
                alert("End date cannot be earlier than start date.");
                return false;
            }

            // Submit the event if validation passes
            await fetch('/EventCalendar/AddEvent', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    title: title,
                    startDate: startDate,
                    endDate: endDate
                })
            });

            // Clear input fields and close modal
            document.getElementById("eventTitle").value = '';
            modal.style.display = "none";

            // Reload events from server
            var response = await fetch('/EventCalendar/GetEvents');
            var events = await response.json();

            // Clear existing events on calendar
            calendar.removeAllEvents();

            // Add retrieved events to calendar
            events.forEach(event => {
                calendar.addEvent({
                    title: event.title,
                    start: event.startDate,
                    end: event.endDate
                });
            });

            // Render calendar with updated events
            calendar.render();
            $('.fc-event-time').html("");

            return false; // Prevent default form submission
        };
        $('.fc-event-time').html("");
    });
</script>

<style>
    #calendar {
        width: 69%;
        margin: 0 auto;
    }
</style>
