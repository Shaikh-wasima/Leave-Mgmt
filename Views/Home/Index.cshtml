@using Microsoft.AspNetCore.Identity;
@using Leave_Management.Data;
@using Leave_Management.Contracts;
@inject SignInManager<Employee> SignInManager;
@inject UserManager<Employee> UserManager;
@inject IUnitOfWork _uow;
@model EmployeeLeaveRequestVm

@{
    ViewData["Title"] = "Home Page";
}

@if (SignInManager.IsSignedIn(User))
{


    <nav class="navbar">
        <div class="container-fluid">
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto">
                    <!-- Add any navigation links here -->
                </ul>
            </div>
        </div>
    </nav> 
    @if ((User.IsInRole("Administrator")) || (User.IsInRole("Manager")))
    {
        <h1 class="text-center display-6">All Employees</h1>

        <div class="container-fluid mt-4">
            <div class="row mt-4 justify-content-around">
                <div class="col-md-3">
                    <a href="/LeaveRequests">
                    <div class="card bg-info text-white">
                        <div class="card-body d-flex justify-content-between align-items-center">
                            <div class="mr-auto">
                                <h5 class="card-title font-weight-bold">Total Requests</h5>
                                <h2 class="card-number" id="totalRequests">0</h2>
                            </div>
                            <i class="fas fa-list-alt fa-lg"></i> <!-- Font Awesome icon for total requests -->
                        </div>
                    </div>
                    </a>
                </div>
                <div class="col-md-3">
                    <a href="/LeaveRequests?filter=pending" >
                        <div  class="card bg-warning text-white">
                        <div class="card-body d-flex justify-content-between align-items-center">
                            <div class="mr-auto">
                                <h5 class="card-title font-weight-bold">Pending Requests</h5>
                                <h2 class="card-number" id="pendingRequests">0</h2>
                            </div>
                            <i class="fas fa-clock fa-lg"></i> <!-- Font Awesome icon for pending requests -->
                        </div>
                    </div>
                    </a>
                </div>
                <div class="col-md-3">
                    <a href="/LeaveRequests?filter=approved">

                    <div class="card bg-success text-white">
                        <div class="card-body d-flex justify-content-between align-items-center">
                            <div class="mr-auto">
                                <h5 class="card-title font-weight-bold">Approved Requests</h5>
                                <h2 class="card-number" id="approvedRequests">0</h2>
                            </div>
                            <i class="fas fa-check fa-lg"></i> <!-- Font Awesome icon for approved requests -->
                        </div>
                    </div>
                    </a>

                </div>
                <div class="col-md-3">
                    <a href="/LeaveRequests?filter=rejected">

                    <div class="card bg-danger text-white">
                        <div class="card-body d-flex justify-content-between align-items-center">
                            <div class="mr-auto">
                                <h5 class="card-title font-weight-bold">Rejected Requests</h5>
                                <h2 class="card-number" id="rejectedRequests">0</h2>
                            </div>
                            <i class="fas fa-times fa-lg"></i> <!-- Font Awesome icon for rejected requests -->
                        </div>
                    </div>
                    </a>

                </div>
            </div>
        </div>
    }

    @if (User.IsInRole("Employee") || User.IsInRole("Manager"))
    {
        <h1 class="text-center display-6">Your Information</h1>

        <div class="container-fluid mt-4">
            <div class="row mt-4 justify-content-around">
                <div class="col-md-3">
                    <a href="/LeaveRequests/MyLeave">

                    <div class="card bg-info text-white">
                        <div class="card-body d-flex justify-content-between align-items-center">
                            <div class="mr-auto">
                                <h5 class="card-title font-weight-bold">Total Approve Leave Days</h5>
                                <h2 class="card-number" id="totalApprovedLeave">0</h2>
                            </div>
                            <i class="fas fa-check-circle fa-lg"></i> <!-- Font Awesome icon for total approved leave -->
                        </div>
                    </div>
                    </a>

                </div>
                <div class="col-md-3">
                    <a href="/LeaveRequests/MyLeave">

                    <div class="card bg-success text-white">
                        <div class="card-body d-flex justify-content-between align-items-center">
                            <div class="mr-auto">
                                <h5 class="card-title font-weight-bold">Remaining Leave Days</h5>
                                <h2 class="card-number" id="RemainingLeave">0</h2>
                            </div>
                            <i class="fas fa-calendar-check fa-lg"></i> <!-- Font Awesome icon for remaining leave -->
                        </div>
                    </div>
                    </a>

                </div>
                <div class="col-md-3">
                    <a href="/LeaveRequests/MyLeave?filter=pending">

                    <div class="card bg-warning text-white">
                        <div class="card-body d-flex justify-content-between align-items-center">
                            <div class="mr-auto">
                                <h5 class="card-title font-weight-bold">Pending Requests</h5>
                                <h2 class="card-number" id="PendingLeave">0</h2>
                            </div>
                            <i class="fas fa-calendar-plus fa-lg"></i> <!-- Font Awesome icon for allocated leave -->
                        </div>
                    </div>
                    </a>

                </div>
                <div class="col-md-3">
                    <a href="/LeaveRequests/MyLeave?filter=rejected">

                    <div class="card bg-danger text-white">
                        <div class="card-body d-flex justify-content-between align-items-center">
                            <div class="mr-auto">
                                <h5 class="card-title font-weight-bold">Rejected Requests</h5>
                                <h2 class="card-number" id="RejectedLeave">0</h2>
                            </div>
                            <i class="fas fa-times-circle fa-lg"></i> <!-- Font Awesome icon for rejected leave -->
                        </div>
                    </div>
                    </a>

                </div>
            </div>
        </div>
    }


    <div class="container-fluid mt-4">
        <h2 class="text-center">Calendar</h2>
        <div id="calendar"></div>
    </div>

    <div class="container-fluid mt-4 text-center">
        <div class="border rounded p-4">
            <h3>Holidays</h3>
            <table id="holidayTable" class="table table-striped table-bordered">
                <thead class="thead-dark">
                    <tr>
                        <th>Sr. No.</th>
                        <th>Festival/Holiday</th>
                        <th>Date</th>
                        <th>Day</th>
                    </tr>
                </thead>
                <tbody id="holidayTableBody"></tbody>
            </table>
        </div>
    </div>

   
}
else
{
    <div class="container text-center">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <h1 class="display-4 mt-5">Welcome to Leave Management</h1>
                <p class="lead">Please log in or register to continue.</p>
                <div class="btn-group" role="group" aria-label="Login or Register">
                    <a href="/Identity/Account/Login" class="btn btn-primary btn-lg mr-2">Login</a>
                    <a href="/Identity/Account/Register" class="btn btn-secondary btn-lg ml-2">Register</a>
                </div>
            </div>
        </div>
        <div class="row mt-5">
            <div class="col-lg-6 mx-auto">
                <img src="~/images/Leave Management.png" class="img-fluid" alt="Employees">
            </div>
        </div>
    </div>
}

@{
    var leaveRequests = _uow.LeaveRequest.GetAll((leave)=> leave.Approved == true);
    var leaveEvents = new List<object>();
 

    foreach (var leave in leaveRequests)
    {
        if (leave.RequestingEmployeeId != null)
        {
            var requestingEmployee = await UserManager.FindByIdAsync(leave.RequestingEmployeeId);


            if (requestingEmployee != null)
            {
                var title = $"{requestingEmployee.Firstname} {requestingEmployee.Lastname}";
                leaveEvents.Add(new
                {
                    title = title,
                    start = leave.StartDate.ToString("yyyy-MM-dd"),
                    end = leave.EndDate.AddDays(1).ToString("yyyy-MM-dd"),
                    color = getAlpha(new Random().Next().ToString()),
                    leaveRequestId = leave.Id,
                });
            }
            string getAlpha(string seed)
            {
                int r = (seed.GetHashCode() & 0xFF0000) >> 16;
                int g = (seed.GetHashCode() & 0x00FF00) >> 8;
                int b = (seed.GetHashCode() & 0x0000FF);

                string colorHexBR = string.Format("#{0:X2}{1:X2}{2:X2}", r, g, b);
                return colorHexBR;
            }
        }
    }

    var serializedEvents = Newtonsoft.Json.JsonConvert.SerializeObject(leaveEvents);
}

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');

        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            events: @Html.Raw(serializedEvents),
            selectable: true,
            eventClick: function (info) {
                var endDate = new Date(info.event.end);
                endDate.setDate(endDate.getDate() - 1);
                var startDate = new Date(info.event.start).toLocaleDateString("en-GB", { day: "2-digit", month: "short", year: "numeric" });
                var formattedEndDate = endDate.toLocaleDateString("en-GB", { day: "2-digit", month: "short", year: "numeric" });
                $('#modalTitle').text(info.event.title);
                $('#modalStart').text(startDate);
                $('#modalEnd').text(formattedEndDate);
                $('#myModal').modal('show');
            }
        });
        calendar.render();
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/fullcalendar@6.1.11/index.global.min.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script>
    $(document).ready(function () {
        $.get("/LeaveRequests/getall", function (data, status) {
            if (status === "success") {
                $("#totalRequests").text(data.data.totalRequest);
                $("#pendingRequests").text(data.data.pendingRequest);
                $("#approvedRequests").text(data.data.approvedRequest);
                $("#rejectedRequests").text(data.data.rejectedRequest);
            } else {
                console.log("Failed to fetch data.");
            }
        });
    });
</script>

<script>
    // Fetch data from the JSON URL
    fetch('/LeaveRequests/MyLeaveGet')
        .then(response => response.json())
        .then(data => {
            // Extract relevant data
            const totalApprovedLeave = data.totalApprovedLeave;
            
            var numberOfDaysArray = [];

            // Iterate over leave allocations and print numberOfDays
            $.each(data.leaveAllocations, function (index, allocation) {
                var numberOfDays = allocation.numberOfDays;
                numberOfDaysArray.push(numberOfDays);
                $('#defaultDaysList').append('<li>' + numberOfDays + '</li>');
            });

            var sumNumberOfDays = numberOfDaysArray.reduce(function (a, b) {
                return a + b;
            }, 0);
            // Calculate remaining leave
            const remainingLeave = sumNumberOfDays - totalApprovedLeave;

            // Update HTML elements with the calculated values
            document.getElementById('totalApprovedLeave').textContent = totalApprovedLeave;
            document.getElementById('PendingLeave').textContent = data.totalPendingLeave;
            document.getElementById('RemainingLeave').textContent = sumNumberOfDays;
            document.getElementById('RejectedLeave').textContent = data.totalRejectedLeave;
        })
        .catch(error => console.error('Error fetching data:', error));
</script>


<script>
    // Define holiday data
    const holidays = [
        { name: "New Year", date: "01st January", day: "Monday" },
        { name: "Republic Day", date: "26th January", day: "Friday" },
        { name: "Maha Shivaratri", date: "8th March", day: "Friday" },
        { name: "Holi", date: "25th March", day: "Monday" },
        { name: "Ramzan Id (Id – Ul- Fitar)", date: "11th April", day: "Thursday (may vary depending on the moon sight)" },
        { name: "Maharashtra Day", date: "01st May", day: "Wednesday" },
        { name: "Independence Day", date: "15th August", day: "Thursday" },
        { name: "Mahatma Gandhi Jayanti", date: "02nd October", day: "Wednesday" },
        { name: "Diwali", date: "01st November", day: "Friday" },
        { name: "Christmas", date: "25th December", day: "Wednesday" }
    ];

    // Function to populate holiday table
    function populateHolidayTable() {
        const holidayTableBody = document.getElementById('holidayTableBody');
        holidays.forEach((holiday, index) => {
            const row = `
                    <tr>
                        <td>${index + 1}</td>
                        <td>${holiday.name}</td>
                        <td>${holiday.date}</td>
                        <td>${holiday.day}</td>
                    </tr>
                `;
            holidayTableBody.innerHTML += row;
        });
    }

    // Call the function to populate the table
    populateHolidayTable();
</script>



<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle">Leave Request Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p><strong>Start Date:</strong> <span id="modalStart"></span></p>
                <p><strong>End Date:</strong> <span id="modalEnd"></span></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<style>

    #calendar {
        width: 69%;
        margin: 0 auto;
    }
</style>

